:root {
  --waveDeg: 40deg;
}

.header { /*refers to the header class*/
  display: inline-block;}

h1 {
  width: 79%;
  color:white; 
  font-family: cursive;
  font-size: x-large;}

#date { /*refers to the date id*/
  width: 20%;
  color:white; 
  font-family: cursive;
  font-size: 20px;
  text-align: right;
  position: relative;
  /*padding-top: 20px;*/}

body {
  background-color: #00063A;
}

text { /*for the numbers inside boxes*/
  font-size: 30px;
  font-family: cursive;
  fill: white}

p {margin-top: 12px; margin-bottom: 12px;}

.square {
  cursor: pointer;
  position: absolute;
}

rect:hover {
  fill-opacity: 0.3}

#boxes { /*refers to the boxes id*/
  user-select: none; /*makes it impossible to select the numbers inside the squares*/
  display: flex;
} 

.lock {
  height: 90%; /* setting the height saved me */
}

.modal {
  color: snow;
  border: 1px solid rgb(0, 0, 0);
  position: fixed; /* because we want the modal to remain at the same position when the user scrolls */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0); /* -50% in the direction of x and y axes; 50% of the size of the container. The modal is now centered on the screen. Scale 0 hides the modal */
  transition: 500ms ease-in-out;
  border-radius: 10px;
  z-index: 10;
  background-color: #353535;
  width: 600px;
  max-width: 90%;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  text-align: justify;
}
.modal.active {
  transform: translate(-50%, -50%) scale(1);
}

.modal-header {
  display: flex;
  justify-content:space-between; /* this is for the main axis, which in our case is horizontal, while align items is for the cross items */
  align-items: center;
  height: 2rem;
}
.modal-header:not(.too-soon) {border-bottom: 1px solid gray;}

.modal-header .close-button {
  cursor: pointer;
  border: none;
  background: none;
  color: snow;
  font-size: 1.25rem;
  font-weight: bold;
}
.title {
  margin-left: 1rem;
  font-weight: 600;
}

.modal-body {
  padding: 10px 15px 30px 15px;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 0vh;
  max-height: 80vh; /* necessary for the scrollbar */
  overflow-y: auto; /* adds a scrollbar */
}

.modal#too-soon {text-align: center;}

.modal-body::-webkit-scrollbar {
  width: 10px;
}
.modal-body::-webkit-scrollbar-track {
  background-color: rgba(0, 0, 0, 0.6);
}
.modal-body::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 20px darkgrey;
}

#overlay {
  position: fixed;
  opacity: 0; /* by default the opacity is 0 because we don't want the overlay to show */
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, .5);
  pointer-events: none; /* we need to set pointer events to none because otherwise we won't be able to click the squares because we'll only be clicking the overlay, which is stacked above */
}
#overlay.active {
  opacity: 1;
  pointer-events: all; /* this way our overlay will be capturing pointer events and we won't be able to click the squares behind it */
}

#luffy { /* for the picture */
  max-width: 50%;
  height: auto;
  margin-top: 2em;
}

#wrapper {
  position: relative;
}

a {
  display: grid;
  text-decoration: none;
  margin-top: 16px;
  --hl: 0;
  --t: .3s
  /* for some strange reason, if I set a font size here, my cool rotating effect stops working */
}
article {
  grid-area: 1/ 1;
  font-size: 4em;
}
.grey {
  opacity: .4;
  filter: grayscale(1) brightness(1.5) invert(0%); 
}
.base {
  filter: 
    sepia(1)
    hue-rotate(calc(var(--hue) - 50deg)) 
    saturate(3);
  transform: 
    translate(calc(var(--hl) * .375em), calc(var(--hl)*-.25em)) 
    rotate(calc(var(--hl)*22.5deg));
  opacity: var(--hl);
  transition: transform var(--t), opacity var(--t);
}
a:hover, a:focus { --hl: 1; }

#face {
  transform: rotate(calc(var(--hl)*180deg)); transition: .8s;
}

#img2 {
  display: none;
}

#huberman {
  transform: rotate(calc(var(--hl)*720deg));
  transition: 1s;
}

#imgIcon:hover {
  filter: saturate(2);
}

img {max-width: 100%;}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

#miam {
  font-size: 4rem;
  animation: rotation 3s infinite linear;
}

.threeFates {
  font-size: .8em;
  margin-top: 5px;
  text-align: center;
}
.grinningFace {
  font-size: 1rem;
  vertical-align: middle;
}

@keyframes waving {
  0% {
    transform: rotate(calc( -1 * var(--waveDeg) ));
    transform-origin: bottom;
  }
  50% {
    transform: rotate(var(--waveDeg));
    transform-origin: bottom;
  }
  100% {
    transform: rotate(calc( -1 * var(--waveDeg) ));
    transform-origin: bottom;
  }
}

#hand {
  font-size: 8rem;
  animation: waving 2s infinite ease-in-out;
  margin: 10rem 0;
}

#dove {font-size: 3rem;}

.link {font-size: 4rem;}

/* MEDIA QUERIES */
@media (max-width: 768px), (max-width: 1024px) and (min-height: 1300px) { /* the latter condition concerns the iPad pro */
  #img1 {
    display: none;
  }
  #img2 {
    display: block;
  }
  header {
    display: flex;
    flex-direction: column;
    margin-bottom: 10%;
  }
  h1 {width: auto;
  padding: 0 5%;
  }
  #date { /*refers to the date id*/
    width: 50%;
    align-self: flex-end;
    margin-right: 5%;
  }
}
@media (min-aspect-ratio: 74/100) and (max-aspect-ratio: 76/100) {
  h1 {font-size: 31px;}
  #date {font-size: 25px;}
}